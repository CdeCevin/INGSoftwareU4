{"ast":null,"code":"// Copyright (c) 2022, 2024, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nconst constants = require(\"./constants.js\");\nconst errors = require('../../errors');\n\n/**\n * Negotiates Compiletime and Runtime capabilities\n *\n */\nclass Capabilities {\n  constructor(nscon) {\n    this.protocolVersion = nscon.sAtts.version;\n    this.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_MAX;\n    this.supports12cLogon = true;\n    this.supportsOob = false;\n    this.nCharsetId = constants.TNS_CHARSET_UTF16;\n    this.compileCaps = Buffer.alloc(constants.TNS_CCAP_MAX);\n    this.runtimeCaps = Buffer.alloc(constants.TNS_RCAP_MAX);\n    this.initCompileCaps(nscon);\n    this.initRuntimeCaps();\n    this.maxStringSize = 0;\n  }\n  adjustForServerCompileCaps(serverCaps, nscon) {\n    if (serverCaps[constants.TNS_CCAP_FIELD_VERSION] < this.ttcFieldVersion) {\n      this.ttcFieldVersion = serverCaps[constants.TNS_CCAP_FIELD_VERSION];\n      this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] = this.ttcFieldVersion;\n    }\n    if (this.ttcFieldVersion < constants.TNS_CCAP_FIELD_VERSION_23_4 && nscon.endOfRequestSupport) {\n      // endOfRequestSupport used only from 23.4 onwards and not for 23.3\n      this.compileCaps[constants.TNS_CCAP_TTC4] ^= constants.TNS_CCAP_END_OF_REQUEST;\n      nscon.endOfRequestSupport = false;\n    }\n  }\n  adjustForServerRuntimeCaps(serverCaps) {\n    if (serverCaps[constants.TNS_RCAP_TTC] & constants.TNS_RCAP_TTC_32K) {\n      this.maxStringSize = 32767;\n    } else {\n      this.maxStringSize = 4000;\n    }\n  }\n  initCompileCaps(nscon) {\n    this.compileCaps[constants.TNS_CCAP_SQL_VERSION] = constants.TNS_CCAP_SQL_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOGON_TYPES] = constants.TNS_CCAP_O5LOGON | constants.TNS_CCAP_O5LOGON_NP | constants.TNS_CCAP_O7LOGON | constants.TNS_CCAP_O8LOGON_LONG_IDENTIFIER | constants.TNS_CCAP_O9LOGON_LONG_PASSWORD;\n    this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] = this.ttcFieldVersion;\n    this.compileCaps[constants.TNS_CCAP_SERVER_DEFINE_CONV] = 1;\n    this.compileCaps[constants.TNS_CCAP_TTC1] = constants.TNS_CCAP_FAST_BVEC | constants.TNS_CCAP_END_OF_CALL_STATUS | constants.TNS_CCAP_IND_RCD;\n    this.compileCaps[constants.TNS_CCAP_OCI1] = constants.TNS_CCAP_FAST_SESSION_PROPAGATE | constants.TNS_CCAP_APP_CTX_PIGGYBACK;\n    this.compileCaps[constants.TNS_CCAP_TDS_VERSION] = constants.TNS_CCAP_TDS_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_VERSION] = constants.TNS_CCAP_RPC_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_SIG] = constants.TNS_CCAP_RPC_SIG_VALUE;\n    this.compileCaps[constants.TNS_CCAP_DBF_VERSION] = constants.TNS_CCAP_DBF_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOB] = constants.TNS_CCAP_LOB_UB8_SIZE | constants.TNS_CCAP_LOB_ENCS | constants.TNS_CCAP_LOB_PREFETCH | constants.TNS_CCAP_LOB_TEMP_SIZE | constants.TNS_CCAP_LOB_12C | constants.TNS_CCAP_LOB_PREFETCH_DATA;\n    this.compileCaps[constants.TNS_CCAP_UB2_DTY] = 1;\n    this.compileCaps[constants.TNS_CCAP_LOB2] = constants.TNS_CCAP_LOB2_QUASI | constants.TNS_CCAP_LOB2_2GB_PREFETCH;\n    this.compileCaps[constants.TNS_CCAP_TTC3] = constants.TNS_CCAP_IMPLICIT_RESULTS | constants.TNS_CCAP_BIG_CHUNK_CLR | constants.TNS_CCAP_KEEP_OUT_ORDER;\n    this.compileCaps[constants.TNS_CCAP_TTC2] = constants.TNS_CCAP_ZLNP;\n    this.compileCaps[constants.TNS_CCAP_OCI2] = constants.TNS_CCAP_DRCP;\n    this.compileCaps[constants.TNS_CCAP_CLIENT_FN] = constants.TNS_CCAP_CLIENT_FN_MAX;\n    this.compileCaps[constants.TNS_CCAP_TTC4] = constants.TNS_CCAP_INBAND_NOTIFICATION;\n    if (nscon.endOfRequestSupport) {\n      this.compileCaps[constants.TNS_CCAP_TTC4] |= constants.TNS_CCAP_END_OF_REQUEST;\n    }\n    this.compileCaps[constants.TNS_CCAP_CTB_FEATURE_BACKPORT] = constants.TNS_CCAP_CTB_IMPLICIT_POOL;\n    this.compileCaps[constants.TNS_CCAP_TTC5] = constants.TNS_CCAP_VECTOR_SUPPORT;\n    this.compileCaps[constants.TNS_CCAP_VECTOR_FEATURES] = constants.TNS_CCAP_VECTOR_FEATURE_BINARY;\n  }\n  initRuntimeCaps() {\n    this.runtimeCaps[constants.TNS_RCAP_COMPAT] = constants.TNS_RCAP_COMPAT_81;\n    this.runtimeCaps[constants.TNS_RCAP_TTC] = constants.TNS_RCAP_TTC_ZERO_COPY | constants.TNS_RCAP_TTC_32K;\n  }\n  checkNCharsetId() {\n    if (this.nCharsetId !== constants.TNS_CHARSET_UTF16) {\n      errors.throwErr(errors.ERR_NCHAR_CS_NOT_SUPPORTED, this.nCharsetId);\n    }\n  }\n}\nmodule.exports = Capabilities;","map":{"version":3,"names":["Buffer","require","constants","errors","Capabilities","constructor","nscon","protocolVersion","sAtts","version","ttcFieldVersion","TNS_CCAP_FIELD_VERSION_MAX","supports12cLogon","supportsOob","nCharsetId","TNS_CHARSET_UTF16","compileCaps","alloc","TNS_CCAP_MAX","runtimeCaps","TNS_RCAP_MAX","initCompileCaps","initRuntimeCaps","maxStringSize","adjustForServerCompileCaps","serverCaps","TNS_CCAP_FIELD_VERSION","TNS_CCAP_FIELD_VERSION_23_4","endOfRequestSupport","TNS_CCAP_TTC4","TNS_CCAP_END_OF_REQUEST","adjustForServerRuntimeCaps","TNS_RCAP_TTC","TNS_RCAP_TTC_32K","TNS_CCAP_SQL_VERSION","TNS_CCAP_SQL_VERSION_MAX","TNS_CCAP_LOGON_TYPES","TNS_CCAP_O5LOGON","TNS_CCAP_O5LOGON_NP","TNS_CCAP_O7LOGON","TNS_CCAP_O8LOGON_LONG_IDENTIFIER","TNS_CCAP_O9LOGON_LONG_PASSWORD","TNS_CCAP_SERVER_DEFINE_CONV","TNS_CCAP_TTC1","TNS_CCAP_FAST_BVEC","TNS_CCAP_END_OF_CALL_STATUS","TNS_CCAP_IND_RCD","TNS_CCAP_OCI1","TNS_CCAP_FAST_SESSION_PROPAGATE","TNS_CCAP_APP_CTX_PIGGYBACK","TNS_CCAP_TDS_VERSION","TNS_CCAP_TDS_VERSION_MAX","TNS_CCAP_RPC_VERSION","TNS_CCAP_RPC_VERSION_MAX","TNS_CCAP_RPC_SIG","TNS_CCAP_RPC_SIG_VALUE","TNS_CCAP_DBF_VERSION","TNS_CCAP_DBF_VERSION_MAX","TNS_CCAP_LOB","TNS_CCAP_LOB_UB8_SIZE","TNS_CCAP_LOB_ENCS","TNS_CCAP_LOB_PREFETCH","TNS_CCAP_LOB_TEMP_SIZE","TNS_CCAP_LOB_12C","TNS_CCAP_LOB_PREFETCH_DATA","TNS_CCAP_UB2_DTY","TNS_CCAP_LOB2","TNS_CCAP_LOB2_QUASI","TNS_CCAP_LOB2_2GB_PREFETCH","TNS_CCAP_TTC3","TNS_CCAP_IMPLICIT_RESULTS","TNS_CCAP_BIG_CHUNK_CLR","TNS_CCAP_KEEP_OUT_ORDER","TNS_CCAP_TTC2","TNS_CCAP_ZLNP","TNS_CCAP_OCI2","TNS_CCAP_DRCP","TNS_CCAP_CLIENT_FN","TNS_CCAP_CLIENT_FN_MAX","TNS_CCAP_INBAND_NOTIFICATION","TNS_CCAP_CTB_FEATURE_BACKPORT","TNS_CCAP_CTB_IMPLICIT_POOL","TNS_CCAP_TTC5","TNS_CCAP_VECTOR_SUPPORT","TNS_CCAP_VECTOR_FEATURES","TNS_CCAP_VECTOR_FEATURE_BINARY","TNS_RCAP_COMPAT","TNS_RCAP_COMPAT_81","TNS_RCAP_TTC_ZERO_COPY","checkNCharsetId","throwErr","ERR_NCHAR_CS_NOT_SUPPORTED","module","exports"],"sources":["C:/Users/Koliv/Desktop/Software/my-react-app/node_modules/oracledb/lib/thin/protocol/capabilities.js"],"sourcesContent":["// Copyright (c) 2022, 2024, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst { Buffer } = require('buffer');\nconst constants = require(\"./constants.js\");\nconst errors = require('../../errors');\n\n/**\n * Negotiates Compiletime and Runtime capabilities\n *\n */\nclass Capabilities {\n\n  constructor(nscon) {\n    this.protocolVersion = nscon.sAtts.version;\n    this.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_MAX;\n    this.supports12cLogon = true;\n    this.supportsOob = false;\n    this.nCharsetId = constants.TNS_CHARSET_UTF16;\n    this.compileCaps = Buffer.alloc(constants.TNS_CCAP_MAX);\n    this.runtimeCaps = Buffer.alloc(constants.TNS_RCAP_MAX);\n    this.initCompileCaps(nscon);\n    this.initRuntimeCaps();\n    this.maxStringSize = 0;\n  }\n\n  adjustForServerCompileCaps(serverCaps, nscon) {\n    if (serverCaps[constants.TNS_CCAP_FIELD_VERSION] < this.ttcFieldVersion) {\n      this.ttcFieldVersion = serverCaps[constants.TNS_CCAP_FIELD_VERSION];\n      this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] =\n        this.ttcFieldVersion;\n    }\n    if ((this.ttcFieldVersion < constants.TNS_CCAP_FIELD_VERSION_23_4\n      && nscon.endOfRequestSupport)) {\n      // endOfRequestSupport used only from 23.4 onwards and not for 23.3\n      this.compileCaps[constants.TNS_CCAP_TTC4]\n        ^= constants.TNS_CCAP_END_OF_REQUEST;\n      nscon.endOfRequestSupport = false;\n    }\n  }\n\n  adjustForServerRuntimeCaps(serverCaps) {\n    if (serverCaps[constants.TNS_RCAP_TTC] & constants.TNS_RCAP_TTC_32K) {\n      this.maxStringSize = 32767;\n    } else {\n      this.maxStringSize = 4000;\n    }\n  }\n\n  initCompileCaps(nscon) {\n    this.compileCaps[constants.TNS_CCAP_SQL_VERSION] =\n      constants.TNS_CCAP_SQL_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOGON_TYPES] =\n      constants.TNS_CCAP_O5LOGON | constants.TNS_CCAP_O5LOGON_NP |\n      constants.TNS_CCAP_O7LOGON | constants.TNS_CCAP_O8LOGON_LONG_IDENTIFIER |\n      constants.TNS_CCAP_O9LOGON_LONG_PASSWORD;\n    this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] = this.ttcFieldVersion;\n    this.compileCaps[constants.TNS_CCAP_SERVER_DEFINE_CONV] = 1;\n    this.compileCaps[constants.TNS_CCAP_TTC1] =\n      constants.TNS_CCAP_FAST_BVEC | constants.TNS_CCAP_END_OF_CALL_STATUS |\n      constants.TNS_CCAP_IND_RCD;\n    this.compileCaps[constants.TNS_CCAP_OCI1] =\n      constants.TNS_CCAP_FAST_SESSION_PROPAGATE |\n      constants.TNS_CCAP_APP_CTX_PIGGYBACK;\n    this.compileCaps[constants.TNS_CCAP_TDS_VERSION] =\n      constants.TNS_CCAP_TDS_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_VERSION] =\n      constants.TNS_CCAP_RPC_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_SIG] =\n      constants.TNS_CCAP_RPC_SIG_VALUE;\n    this.compileCaps[constants.TNS_CCAP_DBF_VERSION] =\n      constants.TNS_CCAP_DBF_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOB] =\n      constants.TNS_CCAP_LOB_UB8_SIZE | constants.TNS_CCAP_LOB_ENCS\n      | constants.TNS_CCAP_LOB_PREFETCH | constants.TNS_CCAP_LOB_TEMP_SIZE\n      | constants.TNS_CCAP_LOB_12C | constants.TNS_CCAP_LOB_PREFETCH_DATA;\n    this.compileCaps[constants.TNS_CCAP_UB2_DTY] = 1;\n    this.compileCaps[constants.TNS_CCAP_LOB2] =\n      constants.TNS_CCAP_LOB2_QUASI | constants.TNS_CCAP_LOB2_2GB_PREFETCH;\n    this.compileCaps[constants.TNS_CCAP_TTC3] =\n      constants.TNS_CCAP_IMPLICIT_RESULTS | constants.TNS_CCAP_BIG_CHUNK_CLR |\n      constants.TNS_CCAP_KEEP_OUT_ORDER;\n    this.compileCaps[constants.TNS_CCAP_TTC2] = constants.TNS_CCAP_ZLNP;\n    this.compileCaps[constants.TNS_CCAP_OCI2] = constants.TNS_CCAP_DRCP;\n    this.compileCaps[constants.TNS_CCAP_CLIENT_FN] =\n      constants.TNS_CCAP_CLIENT_FN_MAX;\n    this.compileCaps[constants.TNS_CCAP_TTC4] =\n      constants.TNS_CCAP_INBAND_NOTIFICATION;\n    if (nscon.endOfRequestSupport) {\n      this.compileCaps[constants.TNS_CCAP_TTC4] |= constants.TNS_CCAP_END_OF_REQUEST;\n    }\n    this.compileCaps[constants.TNS_CCAP_CTB_FEATURE_BACKPORT] =\n      constants.TNS_CCAP_CTB_IMPLICIT_POOL;\n    this.compileCaps[constants.TNS_CCAP_TTC5] =\n      constants.TNS_CCAP_VECTOR_SUPPORT;\n    this.compileCaps[constants.TNS_CCAP_VECTOR_FEATURES] =\n      constants.TNS_CCAP_VECTOR_FEATURE_BINARY;\n  }\n\n  initRuntimeCaps() {\n    this.runtimeCaps[constants.TNS_RCAP_COMPAT] = constants.TNS_RCAP_COMPAT_81;\n    this.runtimeCaps[constants.TNS_RCAP_TTC] =\n      constants.TNS_RCAP_TTC_ZERO_COPY | constants.TNS_RCAP_TTC_32K;\n  }\n\n  checkNCharsetId() {\n    if (this.nCharsetId !== constants.TNS_CHARSET_UTF16) {\n      errors.throwErr(errors.ERR_NCHAR_CS_NOT_SUPPORTED, this.nCharsetId);\n    }\n  }\n\n}\n\nmodule.exports = Capabilities;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}