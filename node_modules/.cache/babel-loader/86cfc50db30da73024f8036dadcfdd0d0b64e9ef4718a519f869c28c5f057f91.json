{"ast":null,"code":"// Copyright (c) 2016, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nconst errors = require('./errors.js');\nconst process = require('process');\nconst util = require('util');\nconst types = require('./types.js');\nconst constants = require('./constants.js');\n\n// node-oracledb version number\nlet packageJSON;\ntry {\n  packageJSON = require('../package.json');\n} catch (err) {\n  errors.throwErr(errors.ERR_MISSING_FILE, 'package.json');\n}\nconst PACKAGE_JSON_VERSION = packageJSON.version;\n\n// Directory containing the node-oracledb add-on binary\nconst RELEASE_DIR = 'build/Release';\n\n// The default node-oracledb add-on binary filename for this Node.js\nconst BINARY_FILE = 'oracledb-' + PACKAGE_JSON_VERSION + '-' + process.platform + '-' + process.arch + '.node';\n\n// The node-oracledb binary filename when it is built from source\nconst BUILD_FILE = 'oracledb.node';\n\n// Staging directory used by maintainers building the npm package\nconst STAGING_DIR = 'package/Staging';\n\n// getInstallURL returns a string with installation URL\nfunction getInstallURL() {\n  return 'Node-oracledb installation instructions: https://node-oracledb.readthedocs.io/en/latest/user_guide/installation.html';\n}\n\n// getInstallHelp returns a string with installation usage tips that may be helpful\nfunction getInstallHelp() {\n  let arch, url;\n  let mesg = getInstallURL() + '\\n';\n  if (process.platform === 'linux') {\n    if (process.arch === 'x64') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html\\n';\n      arch = '64-bit';\n    } else if (process.arch === 'x32') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/linux-x86-32-downloads.html\\n';\n      arch = '32-bit';\n    } else {\n      url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n      arch = process.arch;\n    }\n    mesg += 'You must have Linux ' + arch + ' Oracle Client libraries configured with ldconfig, or in LD_LIBRARY_PATH.\\n';\n    mesg += 'If you do not have Oracle Database on this computer, then install the Instant Client Basic or Basic Light package from \\n';\n    mesg += url;\n  } else if (process.platform === 'darwin') {\n    if (process.arch === 'x64') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/macos-intel-x86-downloads.html\\n';\n      arch = '64-bit';\n    } else {\n      url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n      arch = process.arch;\n    }\n    mesg += 'You must have macOS ' + arch + ' Oracle Instant Client Basic or Basic Light package libraries in\\n';\n    mesg += '/usr/local/lib or set by calling oracledb.initOracleClient({libDir: \"/my/instant_client_directory\"}).\\n';\n    mesg += 'Oracle Instant Client can be downloaded from ' + url;\n  } else if (process.platform === 'win32') {\n    if (process.arch === 'x64') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/winx64-64-downloads.html\\n';\n      arch = '64-bit';\n    } else if (process.arch === 'x32') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/microsoft-windows-32-downloads.html\\n';\n      arch = '32-bit';\n    } else {\n      url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n      arch = process.arch;\n    }\n    mesg += 'You must have Windows ' + arch + ' Oracle Client libraries in your PATH environment variable.\\n';\n    mesg += 'If you do not have Oracle Database on this computer, then install the Instant Client Basic or Basic Light package from\\n';\n    mesg += url;\n    mesg += 'A Microsoft Visual Studio Redistributable suitable for your Oracle client library version must be available.\\n';\n  } else {\n    url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n    mesg += 'You must have ' + process.arch + ' Oracle Client libraries in your operating system library search path.\\n';\n    mesg += 'If you do not have Oracle Database on this computer, then install an Instant Client Basic or Basic Light package from: \\n';\n    mesg += url;\n  }\n  return mesg;\n}\n\n// The callbackify function is used to wrap async methods to add optional\n// callback support. If the last parameter passed to a method is a function,\n// then it is assumed that the callback pattern is being used and the promise\n// is resolved or rejected and the callback invoked; otherwise, the function is\n// called unchanged and a promise is returned\nfunction callbackify(func) {\n  const wrapper = function () {\n    // if last argument is not a function, simply invoke the function as usual\n    // and a promise will be returned\n    if (typeof arguments[arguments.length - 1] !== 'function') {\n      return func.apply(this, arguments).catch(function stackCapture(err) {\n        throw errors.transformErr(err, stackCapture);\n      });\n    }\n\n    // otherwise, resolve or reject the promise and invoke the callback\n    const args = Array.prototype.slice.call(arguments, 0, arguments.length - 1);\n    const cb = arguments[arguments.length - 1];\n    func.apply(this, args).then(function (result) {\n      cb(null, result);\n    }, function stackCapture(err) {\n      cb(errors.transformErr(err, stackCapture));\n    });\n  };\n  if (func.name) {\n    Object.defineProperty(wrapper, 'name', {\n      value: func.name\n    });\n  }\n  return wrapper;\n}\n\n// The serialize function is used to wrap methods to ensure that the connection\n// is not used concurrently by multiple threads\nfunction serialize(func) {\n  return async function () {\n    let connImpl;\n\n    // determine the connection implementation associated with the object, if\n    // one currently exists and acquire the \"lock\"; this simply checks to see\n    // if another operation is in progress, and if so, waits for it to complete\n    if (this._impl) {\n      connImpl = this._impl._getConnImpl();\n      await connImpl._acquireLock();\n    }\n\n    // call the function and ensure that the lock is \"released\" once the\n    // function has completed -- either successfully or in failure -- but only\n    // if a connection implementation is currently associated with this object\n    try {\n      return await func.apply(this, arguments);\n    } finally {\n      if (connImpl) connImpl._releaseLock();\n    }\n  };\n}\nfunction preventConcurrent(func, errorCode) {\n  return async function () {\n    if (this._isActive) errors.throwErr(errorCode);\n    this._isActive = true;\n    try {\n      return await func.apply(this, arguments);\n    } finally {\n      this._isActive = false;\n    }\n  };\n}\n\n// The wrapFns() function is used to wrap the named methods on the prototype\n// in multiple ways (serialize, preventConcurrent and callbackify); the\n// arguments following the formal arguments contain the names of methods to\n// wrap on the prototype; if the first extra argument is an error code, it is\n// used to wrap to prevent concurrent access\nfunction wrapFns(proto) {\n  let nameIndex = 1;\n  let preventConcurrentErrorCode;\n  if (typeof arguments[1] === 'number') {\n    nameIndex = 2;\n    preventConcurrentErrorCode = arguments[1];\n  }\n  for (let i = nameIndex; i < arguments.length; i++) {\n    const name = arguments[i];\n    const f = proto[name];\n    if (preventConcurrentErrorCode) {\n      proto[name] = callbackify(preventConcurrent(serialize(f), preventConcurrentErrorCode));\n    } else proto[name] = callbackify(serialize(f));\n  }\n}\nfunction isArrayOfStrings(value) {\n  if (!Array.isArray(value)) return false;\n  for (let i = 0; i < value.length; i++) {\n    if (typeof value[i] !== 'string') return false;\n  }\n  return true;\n}\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\nfunction isObjectOrArray(value) {\n  return value !== null && typeof value === 'object' || Array.isArray(value);\n}\n\n//---------------------------------------------------------------------------\n// isPrivilege()\n//\n// Returns a boolean indicating if the supplied value is a valid privilege.\n//---------------------------------------------------------------------------\nfunction isPrivilege(value) {\n  // Privileges are mutually exclusive and cannot be specified together\n  // except SYSPRELIM, which cannot be specified alone, it is specified in a\n  // combo with SYSOPER or SYSDBA.  SYSPRELIM is used only for\n  // startup/shutdown\n\n  // If SYSPRELIM specified, clear the bit\n  if (value & constants.SYSPRELIM) {\n    value = value ^ constants.SYSPRELIM;\n  }\n  return value === constants.SYSASM || value === constants.SYSBACKUP || value === constants.SYSDBA || value === constants.SYSDG || value === constants.SYSKM || value === constants.SYSOPER || value === constants.SYSRAC;\n}\nfunction isShardingKey(value) {\n  if (!Array.isArray(value)) return false;\n  for (let i = 0; i < value.length; i++) {\n    const element = value[i];\n    const ok = typeof element === 'string' || typeof element === 'number' || Buffer.isBuffer(element) || util.types.isDate(element);\n    if (!ok) return false;\n  }\n  return true;\n}\nfunction isSodaDocument(value) {\n  return value != null && value._sodaDocumentMarker;\n}\nfunction isXid(value) {\n  return isObject(value) && Number.isInteger(value.formatId) && (Buffer.isBuffer(value.globalTransactionId) || typeof value.globalTransactionId === 'string') && (Buffer.isBuffer(value.branchQualifier) || typeof value.branchQualifier === 'string');\n}\nfunction normalizeXid(value) {\n  let normalizedXid;\n  if (Buffer.isBuffer(value.globalTransactionId) && Buffer.isBuffer(value.branchQualifier)) {\n    normalizedXid = value;\n  } else {\n    normalizedXid = {\n      formatId: value.formatId,\n      globalTransactionId: value.globalTransactionId,\n      branchQualifier: value.branchQualifier\n    };\n    if (typeof value.globalTransactionId === 'string') {\n      normalizedXid.globalTransactionId = Buffer.from(value.globalTransactionId);\n    }\n    if (typeof value.branchQualifier === 'string') {\n      normalizedXid.branchQualifier = Buffer.from(value.branchQualifier);\n    }\n  }\n  if (normalizedXid.globalTransactionId.length > 64) {\n    errors.throwErr(errors.ERR_INVALID_TRANSACTION_SIZE, normalizedXid.globalTransactionId.length);\n  }\n  if (normalizedXid.branchQualifier.length > 64) {\n    errors.throwErr(errors.ERR_INVALID_BRANCH_SIZE, normalizedXid.branchQualifier.length);\n  }\n  return normalizedXid;\n}\nfunction verifySodaDoc(content) {\n  if (isSodaDocument(content)) return content._impl;\n  errors.assertParamValue(isObject(content), 1);\n  return Buffer.from(JSON.stringify(content));\n}\nfunction isTokenExpired(token) {\n  errors.assert(typeof token === 'string', errors.ERR_TOKEN_BASED_AUTH);\n  if (token.split('.')[1] === undefined) {\n    errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n  }\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const buff = Buffer.from(base64, 'base64');\n  const payloadInit = buff.toString('ascii');\n  let expiry = JSON.parse(payloadInit).exp;\n  errors.assert(expiry != undefined, errors.ERR_TOKEN_BASED_AUTH);\n  expiry = expiry * 1000;\n  return new Date().getTime() > expiry;\n}\nfunction isTokenValid(accessToken) {\n  switch (typeof accessToken) {\n    case 'string':\n      if (accessToken === '') {\n        errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n      }\n      return !isTokenExpired(accessToken);\n    case 'object':\n      if (accessToken.token === undefined || accessToken.token === '' || accessToken.privateKey === undefined || accessToken.privateKey === '') {\n        errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n      }\n      return !isTokenExpired(accessToken.token);\n    default:\n      errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n  }\n}\nfunction denormalizePrivateKey(privateKey) {\n  privateKey = privateKey.replace(/\\n/g, '');\n  privateKey = privateKey.replace('-----BEGIN PRIVATE KEY-----', '');\n  privateKey = privateKey.replace('-----END PRIVATE KEY-----', '');\n  return privateKey;\n}\n\n//-----------------------------------------------------------------------------\n// addTypeProperties()\n//\n// Adds derived properties about the type as a convenience to the user.\n// Currently this is only the name of type, which is either the name of the\n// database object type (if the value refers to a database object) or the name\n// of the Oracle database type.\n// -----------------------------------------------------------------------------\nfunction addTypeProperties(obj, attrName) {\n  const clsAttrName = attrName + \"Class\";\n  const nameAttrName = attrName + \"Name\";\n  const cls = obj[clsAttrName];\n  let dbType = obj[attrName];\n  if (typeof dbType === 'number') {\n    dbType = obj[attrName] = types.getTypeByNum(dbType);\n  }\n  if (cls) {\n    obj[nameAttrName] = cls.prototype.fqn;\n  } else if (dbType) {\n    obj[nameAttrName] = dbType.columnTypeName;\n  }\n}\n\n//-----------------------------------------------------------------------------\n// isVectorValue()\n//\n// Returns true for list of typed arrays supported for vector column types\n//\n// -----------------------------------------------------------------------------\nfunction isVectorValue(value) {\n  return value instanceof Float32Array || value instanceof Float64Array || value instanceof Int8Array || Object.getPrototypeOf(value) === Uint8Array.prototype;\n}\n\n//-----------------------------------------------------------------------------\n// makeDate()\n//\n// Returns a date from the given components.\n//\n// -----------------------------------------------------------------------------\nfunction makeDate(useLocal, year, month, day, hour, minute, second, fseconds, offset) {\n  if (useLocal) {\n    return new Date(year, month - 1, day, hour, minute, second, fseconds);\n  }\n  return new Date(Date.UTC(year, month - 1, day, hour, minute, second, fseconds) - offset * 60000);\n}\n\n// define exports\nmodule.exports = {\n  BINARY_FILE,\n  BUILD_FILE,\n  PACKAGE_JSON_VERSION,\n  RELEASE_DIR,\n  STAGING_DIR,\n  addTypeProperties,\n  callbackify,\n  denormalizePrivateKey,\n  getInstallURL,\n  getInstallHelp,\n  isArrayOfStrings,\n  isObject,\n  isObjectOrArray,\n  isPrivilege,\n  isShardingKey,\n  isSodaDocument,\n  isTokenExpired,\n  isTokenValid,\n  isVectorValue,\n  isXid,\n  normalizeXid,\n  makeDate,\n  preventConcurrent,\n  serialize,\n  verifySodaDoc,\n  wrapFns\n};","map":{"version":3,"names":["Buffer","require","errors","process","util","types","constants","packageJSON","err","throwErr","ERR_MISSING_FILE","PACKAGE_JSON_VERSION","version","RELEASE_DIR","BINARY_FILE","platform","arch","BUILD_FILE","STAGING_DIR","getInstallURL","getInstallHelp","url","mesg","callbackify","func","wrapper","arguments","length","apply","catch","stackCapture","transformErr","args","Array","prototype","slice","call","cb","then","result","name","Object","defineProperty","value","serialize","connImpl","_impl","_getConnImpl","_acquireLock","_releaseLock","preventConcurrent","errorCode","_isActive","wrapFns","proto","nameIndex","preventConcurrentErrorCode","i","f","isArrayOfStrings","isArray","isObject","isObjectOrArray","isPrivilege","SYSPRELIM","SYSASM","SYSBACKUP","SYSDBA","SYSDG","SYSKM","SYSOPER","SYSRAC","isShardingKey","element","ok","isBuffer","isDate","isSodaDocument","_sodaDocumentMarker","isXid","Number","isInteger","formatId","globalTransactionId","branchQualifier","normalizeXid","normalizedXid","from","ERR_INVALID_TRANSACTION_SIZE","ERR_INVALID_BRANCH_SIZE","verifySodaDoc","content","assertParamValue","JSON","stringify","isTokenExpired","token","assert","ERR_TOKEN_BASED_AUTH","split","undefined","base64Url","base64","replace","buff","payloadInit","toString","expiry","parse","exp","Date","getTime","isTokenValid","accessToken","privateKey","denormalizePrivateKey","addTypeProperties","obj","attrName","clsAttrName","nameAttrName","cls","dbType","getTypeByNum","fqn","columnTypeName","isVectorValue","Float32Array","Float64Array","Int8Array","getPrototypeOf","Uint8Array","makeDate","useLocal","year","month","day","hour","minute","second","fseconds","offset","UTC","module","exports"],"sources":["C:/Users/Koliv/Desktop/Software/my-react-app/node_modules/oracledb/lib/util.js"],"sourcesContent":["// Copyright (c) 2016, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst { Buffer } = require('buffer');\nconst errors = require('./errors.js');\nconst process = require('process');\nconst util = require('util');\nconst types = require('./types.js');\nconst constants = require('./constants.js');\n\n// node-oracledb version number\nlet packageJSON;\ntry {\n  packageJSON = require('../package.json');\n} catch (err) {\n  errors.throwErr(errors.ERR_MISSING_FILE, 'package.json');\n}\nconst PACKAGE_JSON_VERSION = packageJSON.version;\n\n// Directory containing the node-oracledb add-on binary\nconst RELEASE_DIR = 'build/Release';\n\n// The default node-oracledb add-on binary filename for this Node.js\nconst BINARY_FILE = 'oracledb-' + PACKAGE_JSON_VERSION + '-' + process.platform + '-' + process.arch + '.node';\n\n// The node-oracledb binary filename when it is built from source\nconst BUILD_FILE = 'oracledb.node';\n\n// Staging directory used by maintainers building the npm package\nconst STAGING_DIR = 'package/Staging';\n\n// getInstallURL returns a string with installation URL\nfunction getInstallURL() {\n  return ('Node-oracledb installation instructions: https://node-oracledb.readthedocs.io/en/latest/user_guide/installation.html');\n}\n\n\n// getInstallHelp returns a string with installation usage tips that may be helpful\nfunction getInstallHelp() {\n  let arch, url;\n  let mesg = getInstallURL() + '\\n';\n  if (process.platform === 'linux') {\n    if (process.arch === 'x64') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html\\n';\n      arch = '64-bit';\n    } else if (process.arch === 'x32') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/linux-x86-32-downloads.html\\n';\n      arch = '32-bit';\n    } else {\n      url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n      arch = process.arch;\n    }\n    mesg += 'You must have Linux ' + arch + ' Oracle Client libraries configured with ldconfig, or in LD_LIBRARY_PATH.\\n';\n    mesg += 'If you do not have Oracle Database on this computer, then install the Instant Client Basic or Basic Light package from \\n';\n    mesg += url;\n  } else if (process.platform === 'darwin') {\n    if (process.arch === 'x64') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/macos-intel-x86-downloads.html\\n';\n      arch = '64-bit';\n    } else {\n      url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n      arch = process.arch;\n    }\n    mesg += 'You must have macOS ' + arch + ' Oracle Instant Client Basic or Basic Light package libraries in\\n';\n    mesg += '/usr/local/lib or set by calling oracledb.initOracleClient({libDir: \"/my/instant_client_directory\"}).\\n';\n    mesg += 'Oracle Instant Client can be downloaded from ' + url;\n  } else if (process.platform === 'win32') {\n    if (process.arch === 'x64') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/winx64-64-downloads.html\\n';\n      arch = '64-bit';\n    } else if (process.arch === 'x32') {\n      url = 'https://www.oracle.com/database/technologies/instant-client/microsoft-windows-32-downloads.html\\n';\n      arch = '32-bit';\n    } else {\n      url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n      arch = process.arch;\n    }\n    mesg += 'You must have Windows ' + arch + ' Oracle Client libraries in your PATH environment variable.\\n';\n    mesg += 'If you do not have Oracle Database on this computer, then install the Instant Client Basic or Basic Light package from\\n';\n    mesg += url;\n    mesg += 'A Microsoft Visual Studio Redistributable suitable for your Oracle client library version must be available.\\n';\n  } else {\n    url = 'https://www.oracle.com/database/technologies/instant-client.html\\n';\n    mesg += 'You must have ' + process.arch + ' Oracle Client libraries in your operating system library search path.\\n';\n    mesg += 'If you do not have Oracle Database on this computer, then install an Instant Client Basic or Basic Light package from: \\n';\n    mesg += url;\n  }\n  return mesg;\n}\n\n// The callbackify function is used to wrap async methods to add optional\n// callback support. If the last parameter passed to a method is a function,\n// then it is assumed that the callback pattern is being used and the promise\n// is resolved or rejected and the callback invoked; otherwise, the function is\n// called unchanged and a promise is returned\nfunction callbackify(func) {\n  const wrapper = function() {\n\n    // if last argument is not a function, simply invoke the function as usual\n    // and a promise will be returned\n    if (typeof arguments[arguments.length - 1] !== 'function') {\n      return func.apply(this, arguments).catch(function stackCapture(err) {\n        throw errors.transformErr(err, stackCapture);\n      });\n    }\n\n    // otherwise, resolve or reject the promise and invoke the callback\n    const args = Array.prototype.slice.call(arguments, 0, arguments.length - 1);\n    const cb = arguments[arguments.length - 1];\n    func.apply(this, args).then(function(result) {\n      cb(null, result);\n    }, function stackCapture(err) {\n      cb(errors.transformErr(err, stackCapture));\n    });\n  };\n  if (func.name) {\n    Object.defineProperty(wrapper, 'name', { value: func.name });\n  }\n  return wrapper;\n}\n\n// The serialize function is used to wrap methods to ensure that the connection\n// is not used concurrently by multiple threads\nfunction serialize(func) {\n  return async function() {\n\n    let connImpl;\n\n    // determine the connection implementation associated with the object, if\n    // one currently exists and acquire the \"lock\"; this simply checks to see\n    // if another operation is in progress, and if so, waits for it to complete\n    if (this._impl) {\n      connImpl = this._impl._getConnImpl();\n      await connImpl._acquireLock();\n    }\n\n    // call the function and ensure that the lock is \"released\" once the\n    // function has completed -- either successfully or in failure -- but only\n    // if a connection implementation is currently associated with this object\n    try {\n      return await func.apply(this, arguments);\n    } finally {\n      if (connImpl)\n        connImpl._releaseLock();\n    }\n  };\n}\n\nfunction preventConcurrent(func, errorCode) {\n  return async function() {\n    if (this._isActive)\n      errors.throwErr(errorCode);\n    this._isActive = true;\n    try {\n      return await func.apply(this, arguments);\n    } finally {\n      this._isActive = false;\n    }\n  };\n}\n\n// The wrapFns() function is used to wrap the named methods on the prototype\n// in multiple ways (serialize, preventConcurrent and callbackify); the\n// arguments following the formal arguments contain the names of methods to\n// wrap on the prototype; if the first extra argument is an error code, it is\n// used to wrap to prevent concurrent access\nfunction wrapFns(proto) {\n  let nameIndex = 1;\n  let preventConcurrentErrorCode;\n  if (typeof arguments[1] === 'number') {\n    nameIndex = 2;\n    preventConcurrentErrorCode = arguments[1];\n  }\n  for (let i = nameIndex; i < arguments.length; i++) {\n    const name = arguments[i];\n    const f = proto[name];\n    if (preventConcurrentErrorCode) {\n      proto[name] = callbackify(preventConcurrent(serialize(f),\n        preventConcurrentErrorCode));\n    } else\n      proto[name] = callbackify(serialize(f));\n  }\n}\n\nfunction isArrayOfStrings(value) {\n  if (!Array.isArray(value))\n    return false;\n  for (let i = 0; i < value.length; i++) {\n    if (typeof value[i] !== 'string')\n      return false;\n  }\n  return true;\n}\n\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\nfunction isObjectOrArray(value) {\n  return (value !== null && typeof value === 'object') || Array.isArray(value);\n}\n\n//---------------------------------------------------------------------------\n// isPrivilege()\n//\n// Returns a boolean indicating if the supplied value is a valid privilege.\n//---------------------------------------------------------------------------\nfunction isPrivilege(value) {\n  // Privileges are mutually exclusive and cannot be specified together\n  // except SYSPRELIM, which cannot be specified alone, it is specified in a\n  // combo with SYSOPER or SYSDBA.  SYSPRELIM is used only for\n  // startup/shutdown\n\n  // If SYSPRELIM specified, clear the bit\n  if (value & constants.SYSPRELIM) {\n    value = value ^ constants.SYSPRELIM;\n  }\n  return (\n    value === constants.SYSASM ||\n    value === constants.SYSBACKUP ||\n    value === constants.SYSDBA ||\n    value === constants.SYSDG ||\n    value === constants.SYSKM ||\n    value === constants.SYSOPER ||\n    value === constants.SYSRAC\n  );\n}\n\nfunction isShardingKey(value) {\n  if (!Array.isArray(value))\n    return false;\n  for (let i = 0; i < value.length; i++) {\n    const element = value[i];\n    const ok = typeof element === 'string' ||\n      typeof element === 'number' || Buffer.isBuffer(element) ||\n      util.types.isDate(element);\n    if (!ok)\n      return false;\n  }\n  return true;\n}\n\nfunction isSodaDocument(value) {\n  return (value != null && value._sodaDocumentMarker);\n}\n\nfunction isXid(value) {\n  return (isObject(value) && Number.isInteger(value.formatId) &&\n    (Buffer.isBuffer(value.globalTransactionId) ||\n      typeof value.globalTransactionId === 'string') &&\n    (Buffer.isBuffer(value.branchQualifier) ||\n      typeof value.branchQualifier === 'string'));\n}\n\nfunction normalizeXid(value) {\n  let normalizedXid;\n  if (Buffer.isBuffer(value.globalTransactionId) &&\n    Buffer.isBuffer(value.branchQualifier)) {\n    normalizedXid = value;\n  } else {\n    normalizedXid = {\n      formatId: value.formatId,\n      globalTransactionId: value.globalTransactionId,\n      branchQualifier: value.branchQualifier\n    };\n    if (typeof value.globalTransactionId === 'string') {\n      normalizedXid.globalTransactionId = Buffer.from(value.globalTransactionId);\n    }\n    if (typeof value.branchQualifier === 'string') {\n      normalizedXid.branchQualifier = Buffer.from(value.branchQualifier);\n    }\n  }\n  if (normalizedXid.globalTransactionId.length > 64) {\n    errors.throwErr(errors.ERR_INVALID_TRANSACTION_SIZE,\n      normalizedXid.globalTransactionId.length);\n  }\n  if (normalizedXid.branchQualifier.length > 64) {\n    errors.throwErr(errors.ERR_INVALID_BRANCH_SIZE,\n      normalizedXid.branchQualifier.length);\n  }\n\n  return normalizedXid;\n}\n\nfunction verifySodaDoc(content) {\n  if (isSodaDocument(content))\n    return content._impl;\n  errors.assertParamValue(isObject(content), 1);\n  return Buffer.from(JSON.stringify(content));\n}\n\nfunction isTokenExpired(token) {\n  errors.assert(typeof token === 'string', errors.ERR_TOKEN_BASED_AUTH);\n  if (token.split('.')[1] === undefined) {\n    errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n  }\n\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const buff = Buffer.from(base64, 'base64');\n  const payloadInit = buff.toString('ascii');\n\n  let expiry = JSON.parse(payloadInit).exp;\n  errors.assert(expiry != undefined, errors.ERR_TOKEN_BASED_AUTH);\n  expiry = expiry * 1000;\n\n  return (new Date().getTime() > expiry);\n}\n\nfunction isTokenValid(accessToken) {\n  switch (typeof accessToken) {\n    case 'string':\n      if (accessToken === '') {\n        errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n      }\n\n      return !isTokenExpired(accessToken);\n    case 'object':\n      if (accessToken.token === undefined ||\n          accessToken.token === '' ||\n          accessToken.privateKey === undefined ||\n          accessToken.privateKey === '') {\n        errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n      }\n\n      return !isTokenExpired(accessToken.token);\n    default:\n      errors.throwErr(errors.ERR_TOKEN_BASED_AUTH);\n  }\n}\n\nfunction denormalizePrivateKey(privateKey) {\n  privateKey = privateKey.replace(/\\n/g, '');\n  privateKey = privateKey.replace('-----BEGIN PRIVATE KEY-----', '');\n  privateKey = privateKey.replace('-----END PRIVATE KEY-----', '');\n  return privateKey;\n}\n\n//-----------------------------------------------------------------------------\n// addTypeProperties()\n//\n// Adds derived properties about the type as a convenience to the user.\n// Currently this is only the name of type, which is either the name of the\n// database object type (if the value refers to a database object) or the name\n// of the Oracle database type.\n// -----------------------------------------------------------------------------\nfunction addTypeProperties(obj, attrName) {\n  const clsAttrName = attrName + \"Class\";\n  const nameAttrName = attrName + \"Name\";\n  const cls = obj[clsAttrName];\n  let dbType = obj[attrName];\n  if (typeof dbType === 'number') {\n    dbType = obj[attrName] = types.getTypeByNum(dbType);\n  }\n  if (cls) {\n    obj[nameAttrName] = cls.prototype.fqn;\n  } else if (dbType) {\n    obj[nameAttrName] = dbType.columnTypeName;\n  }\n}\n\n//-----------------------------------------------------------------------------\n// isVectorValue()\n//\n// Returns true for list of typed arrays supported for vector column types\n//\n// -----------------------------------------------------------------------------\nfunction isVectorValue(value) {\n  return (value instanceof Float32Array ||\n    value instanceof Float64Array ||\n    value instanceof Int8Array || (Object.getPrototypeOf(value)\n      === Uint8Array.prototype));\n}\n\n//-----------------------------------------------------------------------------\n// makeDate()\n//\n// Returns a date from the given components.\n//\n// -----------------------------------------------------------------------------\nfunction makeDate(useLocal, year, month, day, hour, minute,\n  second, fseconds, offset) {\n  if (useLocal) {\n    return new Date(year, month - 1, day, hour, minute, second, fseconds);\n  }\n  return new Date(Date.UTC(year, month - 1, day, hour, minute, second,\n    fseconds) - offset * 60000);\n}\n\n// define exports\nmodule.exports = {\n  BINARY_FILE,\n  BUILD_FILE,\n  PACKAGE_JSON_VERSION,\n  RELEASE_DIR,\n  STAGING_DIR,\n  addTypeProperties,\n  callbackify,\n  denormalizePrivateKey,\n  getInstallURL,\n  getInstallHelp,\n  isArrayOfStrings,\n  isObject,\n  isObjectOrArray,\n  isPrivilege,\n  isShardingKey,\n  isSodaDocument,\n  isTokenExpired,\n  isTokenValid,\n  isVectorValue,\n  isXid,\n  normalizeXid,\n  makeDate,\n  preventConcurrent,\n  serialize,\n  verifySodaDoc,\n  wrapFns\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}