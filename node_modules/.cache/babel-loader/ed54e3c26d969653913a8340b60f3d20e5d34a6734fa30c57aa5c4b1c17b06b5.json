{"ast":null,"code":"// Copyright (c) 2023, 2024, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst Message = require(\"./base.js\");\n\n/**\n * Executes a Fast Negotiation RPC function.\n * It sends Protocol Negotiation, Datatype Negotiation\n * and OSESS Key RPC in single round trip.\n *\n * @class FastAuthMessage\n * @extends {Message}\n */\nclass FastAuthMessage extends Message {\n  /**\n   * Serializes the FastAuthMessage function arguments\n   *\n   * @param {object} buf input arguments\n   */\n  encode(buf) {\n    buf.writeUInt8(constants.TNS_MSG_TYPE_FAST_AUTH);\n    buf.writeUInt8(1); // Fast Auth version\n    buf.writeUInt8(constants.TNS_SERVER_CONVERTS_CHARS); // flag 1\n    buf.writeUInt8(0); // flag 2\n    this.protocolMessage.encode(buf);\n    buf.writeUInt16BE(0); // server charset (unused)\n    buf.writeUInt8(0); // server charset flag (unused)\n    buf.writeUInt16BE(0); // server ncharset (unused)\n    buf.caps.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_19_1_EXT_1;\n    buf.writeUInt8(buf.caps.ttcFieldVersion);\n    this.dataTypeMessage.encode(buf);\n    this.authMessage.encode(buf);\n    buf.caps.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_MAX;\n  }\n  processMessage(buf, messageType) {\n    if (messageType === constants.TNS_MSG_TYPE_RENEGOTIATE) {\n      this.reNegotiate = true;\n    } else if (messageType === constants.TNS_MSG_TYPE_PROTOCOL) {\n      this.protocolMessage.processMessage(buf, messageType);\n    } else if (messageType === constants.TNS_MSG_TYPE_DATA_TYPES) {\n      this.dataTypeMessage.processMessage(buf, messageType);\n    } else {\n      this.authMessage.processMessage(buf, messageType);\n      this.endOfResponse = this.authMessage.endOfResponse;\n    }\n  }\n}\nmodule.exports = FastAuthMessage;","map":{"version":3,"names":["constants","require","Message","FastAuthMessage","encode","buf","writeUInt8","TNS_MSG_TYPE_FAST_AUTH","TNS_SERVER_CONVERTS_CHARS","protocolMessage","writeUInt16BE","caps","ttcFieldVersion","TNS_CCAP_FIELD_VERSION_19_1_EXT_1","dataTypeMessage","authMessage","TNS_CCAP_FIELD_VERSION_MAX","processMessage","messageType","TNS_MSG_TYPE_RENEGOTIATE","reNegotiate","TNS_MSG_TYPE_PROTOCOL","TNS_MSG_TYPE_DATA_TYPES","endOfResponse","module","exports"],"sources":["C:/Users/Koliv/Desktop/Software/my-react-app/node_modules/oracledb/lib/thin/protocol/messages/fastAuth.js"],"sourcesContent":["// Copyright (c) 2023, 2024, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst Message = require(\"./base.js\");\n\n/**\n * Executes a Fast Negotiation RPC function.\n * It sends Protocol Negotiation, Datatype Negotiation\n * and OSESS Key RPC in single round trip.\n *\n * @class FastAuthMessage\n * @extends {Message}\n */\nclass FastAuthMessage extends Message {\n\n  /**\n   * Serializes the FastAuthMessage function arguments\n   *\n   * @param {object} buf input arguments\n   */\n  encode(buf) {\n    buf.writeUInt8(constants.TNS_MSG_TYPE_FAST_AUTH);\n    buf.writeUInt8(1); // Fast Auth version\n    buf.writeUInt8(constants.TNS_SERVER_CONVERTS_CHARS); // flag 1\n    buf.writeUInt8(0); // flag 2\n    this.protocolMessage.encode(buf);\n    buf.writeUInt16BE(0); // server charset (unused)\n    buf.writeUInt8(0); // server charset flag (unused)\n    buf.writeUInt16BE(0); // server ncharset (unused)\n    buf.caps.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_19_1_EXT_1;\n    buf.writeUInt8(buf.caps.ttcFieldVersion);\n    this.dataTypeMessage.encode(buf);\n    this.authMessage.encode(buf);\n    buf.caps.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_MAX;\n  }\n\n  processMessage(buf, messageType) {\n    if (messageType === constants.TNS_MSG_TYPE_RENEGOTIATE) {\n      this.reNegotiate = true;\n    } else if (messageType === constants.TNS_MSG_TYPE_PROTOCOL) {\n      this.protocolMessage.processMessage(buf, messageType);\n    } else if (messageType === constants.TNS_MSG_TYPE_DATA_TYPES) {\n      this.dataTypeMessage.processMessage(buf, messageType);\n    } else {\n      this.authMessage.processMessage(buf, messageType);\n      this.endOfResponse = this.authMessage.endOfResponse;\n    }\n  }\n\n}\n\nmodule.exports = FastAuthMessage;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,eAAe,SAASD,OAAO,CAAC;EAEpC;AACF;AACA;AACA;AACA;EACEE,MAAMA,CAACC,GAAG,EAAE;IACVA,GAAG,CAACC,UAAU,CAACN,SAAS,CAACO,sBAAsB,CAAC;IAChDF,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACnBD,GAAG,CAACC,UAAU,CAACN,SAAS,CAACQ,yBAAyB,CAAC,CAAC,CAAC;IACrDH,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI,CAACG,eAAe,CAACL,MAAM,CAACC,GAAG,CAAC;IAChCA,GAAG,CAACK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACtBL,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACnBD,GAAG,CAACK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACtBL,GAAG,CAACM,IAAI,CAACC,eAAe,GAAGZ,SAAS,CAACa,iCAAiC;IACtER,GAAG,CAACC,UAAU,CAACD,GAAG,CAACM,IAAI,CAACC,eAAe,CAAC;IACxC,IAAI,CAACE,eAAe,CAACV,MAAM,CAACC,GAAG,CAAC;IAChC,IAAI,CAACU,WAAW,CAACX,MAAM,CAACC,GAAG,CAAC;IAC5BA,GAAG,CAACM,IAAI,CAACC,eAAe,GAAGZ,SAAS,CAACgB,0BAA0B;EACjE;EAEAC,cAAcA,CAACZ,GAAG,EAAEa,WAAW,EAAE;IAC/B,IAAIA,WAAW,KAAKlB,SAAS,CAACmB,wBAAwB,EAAE;MACtD,IAAI,CAACC,WAAW,GAAG,IAAI;IACzB,CAAC,MAAM,IAAIF,WAAW,KAAKlB,SAAS,CAACqB,qBAAqB,EAAE;MAC1D,IAAI,CAACZ,eAAe,CAACQ,cAAc,CAACZ,GAAG,EAAEa,WAAW,CAAC;IACvD,CAAC,MAAM,IAAIA,WAAW,KAAKlB,SAAS,CAACsB,uBAAuB,EAAE;MAC5D,IAAI,CAACR,eAAe,CAACG,cAAc,CAACZ,GAAG,EAAEa,WAAW,CAAC;IACvD,CAAC,MAAM;MACL,IAAI,CAACH,WAAW,CAACE,cAAc,CAACZ,GAAG,EAAEa,WAAW,CAAC;MACjD,IAAI,CAACK,aAAa,GAAG,IAAI,CAACR,WAAW,CAACQ,aAAa;IACrD;EACF;AAEF;AAEAC,MAAM,CAACC,OAAO,GAAGtB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}