{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst MessageWithData = require(\"./withData.js\");\nconst errors = require(\"../../../errors.js\");\n\n/**\n * Executes OFETCH RPC\n *\n * @class FetchMessage\n * @extends {MessageWithData}\n */\nclass FetchMessage extends MessageWithData {\n  constructor(connection, statement, options, resultSet) {\n    super(connection, statement, options);\n    this.resultSet = resultSet;\n    this.functionCode = constants.TNS_FUNC_FETCH;\n  }\n\n  //-------------------------------------------------------------------------\n  // encode()\n  //\n  // Write the cursor ID and the number of rows to be fetched in the\n  // Fetch Message RPC\n  //-------------------------------------------------------------------------\n  encode(buf) {\n    this.writeFunctionHeader(buf);\n    if (this.statement.cursorId === 0) {\n      errors.throwErr(errors.ERR_CURSOR_HAS_BEEN_CLOSED);\n    }\n    buf.writeUB4(this.statement.cursorId);\n    buf.writeUB4(this.options.fetchArraySize);\n  }\n}\nmodule.exports = FetchMessage;","map":{"version":3,"names":["constants","require","MessageWithData","errors","FetchMessage","constructor","connection","statement","options","resultSet","functionCode","TNS_FUNC_FETCH","encode","buf","writeFunctionHeader","cursorId","throwErr","ERR_CURSOR_HAS_BEEN_CLOSED","writeUB4","fetchArraySize","module","exports"],"sources":["C:/Users/Koliv/Desktop/Software/my-react-app/node_modules/oracledb/lib/thin/protocol/messages/fetch.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst MessageWithData = require(\"./withData.js\");\nconst errors = require(\"../../../errors.js\");\n\n/**\n * Executes OFETCH RPC\n *\n * @class FetchMessage\n * @extends {MessageWithData}\n */\nclass FetchMessage extends MessageWithData {\n\n  constructor(connection, statement, options, resultSet) {\n    super(connection, statement, options);\n    this.resultSet = resultSet;\n    this.functionCode = constants.TNS_FUNC_FETCH;\n  }\n\n  //-------------------------------------------------------------------------\n  // encode()\n  //\n  // Write the cursor ID and the number of rows to be fetched in the\n  // Fetch Message RPC\n  //-------------------------------------------------------------------------\n  encode(buf) {\n    this.writeFunctionHeader(buf);\n    if (this.statement.cursorId === 0) {\n      errors.throwErr(errors.ERR_CURSOR_HAS_BEEN_CLOSED);\n    }\n    buf.writeUB4(this.statement.cursorId);\n    buf.writeUB4(this.options.fetchArraySize);\n  }\n\n}\n\nmodule.exports = FetchMessage;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAMC,eAAe,GAAGD,OAAO,CAAC,eAAe,CAAC;AAChD,MAAME,MAAM,GAAGF,OAAO,CAAC,oBAAoB,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,YAAY,SAASF,eAAe,CAAC;EAEzCG,WAAWA,CAACC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,SAAS,EAAE;IACrD,KAAK,CAACH,UAAU,EAAEC,SAAS,EAAEC,OAAO,CAAC;IACrC,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,YAAY,GAAGV,SAAS,CAACW,cAAc;EAC9C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,MAAMA,CAACC,GAAG,EAAE;IACV,IAAI,CAACC,mBAAmB,CAACD,GAAG,CAAC;IAC7B,IAAI,IAAI,CAACN,SAAS,CAACQ,QAAQ,KAAK,CAAC,EAAE;MACjCZ,MAAM,CAACa,QAAQ,CAACb,MAAM,CAACc,0BAA0B,CAAC;IACpD;IACAJ,GAAG,CAACK,QAAQ,CAAC,IAAI,CAACX,SAAS,CAACQ,QAAQ,CAAC;IACrCF,GAAG,CAACK,QAAQ,CAAC,IAAI,CAACV,OAAO,CAACW,cAAc,CAAC;EAC3C;AAEF;AAEAC,MAAM,CAACC,OAAO,GAAGjB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}